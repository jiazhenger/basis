// ============================================================================================  require 合并配置
function Rjs(){}
var srcPath = '';
var destPath = '../lesson/';
var config = {
	rjs : {
		 src : srcPath + 'app/**/*.js',
		dest : destPath + 'app/module/',
	   watch : null,
	    main : srcPath + 'app/module/',
	  concat : 'main.js'
	},
	common : {
		paths: {
				   angular : 'public/js/angular/angular',
			    angularAMD : 'public/js/angular/angularAMD',
			  angularRoute : 'public/js/angular/angular-ui-router',
			angularAnimate : 'public/js/angular/angular-animate',
			     ngStorage : 'public/js/angular/ngStorage',
			    ngSanitize : 'public/js/angular/angular-sanitize'
		},
		shim: {
			           angular : {'exports' : 'angular'},
					angularAMD : ['angular'],
				  angularRoute : ['angular'],
				angularAnimate : ['angular'],
				  angularSwipe : ['angular'],
					 ngStorage : ['angular'],
					ngSanitize : ['angular']
		}
	},
	module : {
		frontEnd : {
			paths: {
				//ZeroClipboard : 'public/js/copy/ZeroClipboard',
				//ngClip : 'public/js/angular/ng-clip'
			},
			shim: {
				//ngClip : ['angular']
			}
		}
	}
}

var watchGroup = [];

for(var i in config.module){
	watchGroup.push(i);
}

var extend = function(common,module){
	for(var k in common){
		for(var i in module[k]){
			common[k][i] = module[k][i];
		}
	}
	return common;
}

Rjs.prototype.gulp = function(gulp,amdOptimize,concat,uglify,rename,plumber,notify){
	var gulpTask = function(key){
		gulp.task(key,function(){
			var param = extend(config.common,config.module[key]);
			gulp.src(config.rjs.src)
				.pipe(amdOptimize(config.rjs.main + key +'/main',param))
				.pipe(concat(config.rjs.concat))
				.pipe(uglify({
					mangle: false,//类型：Boolean 默认：true 是否修改变量名
            		compress: false,//类型：Boolean 默认：true 是否完全压缩
            		preserveComments: false
				}))
				//.pipe(rename({suffix:".min"}))
				//.pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))
				//.pipe(notify({message:key + ' 模块的 requireJS 合并成功'}))
				.pipe(gulp.dest(config.rjs.dest + key))
		})
	}
	gulpTask('frontEnd')
}
Rjs.prototype.watch = function(gulp){
	gulp.watch(config.rjs.src, watchGroup);
}

module.exports = new Rjs();